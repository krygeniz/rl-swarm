# ---
# PersistentVolumeClaims for shared data directories
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: modal-login-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: keys-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: configs-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: logs-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# FastAPI Deployment and Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fastapi
  template:
    metadata:
      labels:
        app: fastapi
    spec:
      containers:
        - name: fastapi
          image: <your-fastapi-image:tag>
          env:
            - name: OTEL_SERVICE_NAME
              value: rlswarm-fastapi
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://otel-collector:4317
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /api/healthz
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: fastapi
spec:
  selector:
    app: fastapi
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
# otel-collector Deployment and Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: otel-collector
  template:
    metadata:
      labels:
        app: otel-collector
    spec:
      containers:
        - name: otel-collector
          image: otel/opentelemetry-collector-contrib:0.120.0
          env:
            - name: OTEL_LOG_LEVEL
              value: DEBUG
          ports:
            - containerPort: 4317
            - containerPort: 4318
            - containerPort: 55679
          readinessProbe:
            exec:
              command: ["grpc_health_probe", "-addr=localhost:4317"]
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: otel-collector
spec:
  selector:
    app: otel-collector
  ports:
    - protocol: TCP
      port: 4317
      targetPort: 4317
    - protocol: TCP
      port: 4318
      targetPort: 4318
    - protocol: TCP
      port: 55679
      targetPort: 55679
---
# swarm-cpu Deployment and Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: swarm-cpu
spec:
  replicas: 1
  selector:
    matchLabels:
      app: swarm-cpu
  template:
    metadata:
      labels:
        app: swarm-cpu
    spec:
      containers:
        - name: swarm-cpu
          image: <your-swarm-image:tag>
          env:
            - name: HF_TOKEN
              valueFrom:
                secretKeyRef:
                  name: hf-token
                  key: HF_TOKEN
            - name: GENSYN_RESET_CONFIG
              valueFrom:
                secretKeyRef:
                  name: gensyn-reset-config
                  key: GENSYN_RESET_CONFIG
          ports:
            - containerPort: 3000
          volumeMounts:
            - name: modal-login
              mountPath: /home/gensyn/rl_swarm/modal-login/temp-data
            - name: keys
              mountPath: /home/gensyn/rl_swarm/keys
            - name: configs
              mountPath: /home/gensyn/rl_swarm/configs
            - name: logs
              mountPath: /home/gensyn/rl_swarm/logs
      volumes:
        - name: modal-login
          persistentVolumeClaim:
            claimName: modal-login-pvc
        - name: keys
          persistentVolumeClaim:
            claimName: keys-pvc
        - name: configs
          persistentVolumeClaim:
            claimName: configs-pvc
        - name: logs
          persistentVolumeClaim:
            claimName: logs-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: swarm-cpu
spec:
  selector:
    app: swarm-cpu
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
# swarm-gpu Deployment and Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: swarm-gpu
spec:
  replicas: 1
  selector:
    matchLabels:
      app: swarm-gpu
  template:
    metadata:
      labels:
        app: swarm-gpu
    spec:
      containers:
        - name: swarm-gpu
          image: <your-swarm-image:tag>
          env:
            - name: HF_TOKEN
              valueFrom:
                secretKeyRef:
                  name: hf-token
                  key: HF_TOKEN
            - name: GENSYN_RESET_CONFIG
              valueFrom:
                secretKeyRef:
                  name: gensyn-reset-config
                  key: GENSYN_RESET_CONFIG
          ports:
            - containerPort: 3000
          resources:
            limits:
              nvidia.com/gpu: 1
          volumeMounts:
            - name: modal-login
              mountPath: /home/gensyn/rl_swarm/modal-login/temp-data
            - name: keys
              mountPath: /home/gensyn/rl_swarm/keys
            - name: configs
              mountPath: /home/gensyn/rl_swarm/configs
            - name: logs
              mountPath: /home/gensyn/rl_swarm/logs
      volumes:
        - name: modal-login
          persistentVolumeClaim:
            claimName: modal-login-pvc
        - name: keys
          persistentVolumeClaim:
            claimName: keys-pvc
        - name: configs
          persistentVolumeClaim:
            claimName: configs-pvc
        - name: logs
          persistentVolumeClaim:
            claimName: logs-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: swarm-gpu
spec:
  selector:
    app: swarm-gpu
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000 